/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package upbankapi

import (
	"encoding/json"
)

// TransactionResourceAttributesAmount The amount of this transaction in Australian dollars. For transactions that were once `HELD` but are now `SETTLED`, refer to the `holdInfo` field for the original `amount` the transaction was `HELD` at. 
type TransactionResourceAttributesAmount struct {
	// The ISO 4217 currency code. 
	CurrencyCode string `json:"currencyCode"`
	// The amount of money, formatted as a string in the relevant currency. For example, for an Australian dollar value of $10.56, this field will be `\"10.56\"`. The currency symbol is not included in the string. 
	Value string `json:"value"`
	// The amount of money in the smallest denomination for the currency, as a 64-bit integer.  For example, for an Australian dollar value of $10.56, this field will be `1056`. 
	ValueInBaseUnits int32 `json:"valueInBaseUnits"`
}

// NewTransactionResourceAttributesAmount instantiates a new TransactionResourceAttributesAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResourceAttributesAmount(currencyCode string, value string, valueInBaseUnits int32) *TransactionResourceAttributesAmount {
	this := TransactionResourceAttributesAmount{}
	this.CurrencyCode = currencyCode
	this.Value = value
	this.ValueInBaseUnits = valueInBaseUnits
	return &this
}

// NewTransactionResourceAttributesAmountWithDefaults instantiates a new TransactionResourceAttributesAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResourceAttributesAmountWithDefaults() *TransactionResourceAttributesAmount {
	this := TransactionResourceAttributesAmount{}
	return &this
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *TransactionResourceAttributesAmount) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceAttributesAmount) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *TransactionResourceAttributesAmount) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetValue returns the Value field value
func (o *TransactionResourceAttributesAmount) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceAttributesAmount) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *TransactionResourceAttributesAmount) SetValue(v string) {
	o.Value = v
}

// GetValueInBaseUnits returns the ValueInBaseUnits field value
func (o *TransactionResourceAttributesAmount) GetValueInBaseUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValueInBaseUnits
}

// GetValueInBaseUnitsOk returns a tuple with the ValueInBaseUnits field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceAttributesAmount) GetValueInBaseUnitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueInBaseUnits, true
}

// SetValueInBaseUnits sets field value
func (o *TransactionResourceAttributesAmount) SetValueInBaseUnits(v int32) {
	o.ValueInBaseUnits = v
}

func (o TransactionResourceAttributesAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["valueInBaseUnits"] = o.ValueInBaseUnits
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionResourceAttributesAmount struct {
	value *TransactionResourceAttributesAmount
	isSet bool
}

func (v NullableTransactionResourceAttributesAmount) Get() *TransactionResourceAttributesAmount {
	return v.value
}

func (v *NullableTransactionResourceAttributesAmount) Set(val *TransactionResourceAttributesAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResourceAttributesAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResourceAttributesAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResourceAttributesAmount(val *TransactionResourceAttributesAmount) *NullableTransactionResourceAttributesAmount {
	return &NullableTransactionResourceAttributesAmount{value: val, isSet: true}
}

func (v NullableTransactionResourceAttributesAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResourceAttributesAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


