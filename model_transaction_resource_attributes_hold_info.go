/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package upbankapi

import (
	"encoding/json"
)

// TransactionResourceAttributesHoldInfo If this transaction is currently in the `HELD` status, or was ever in the `HELD` status, the `amount` and `foreignAmount` of the transaction while `HELD`. 
type TransactionResourceAttributesHoldInfo struct {
	Amount HoldInfoObjectAmount `json:"amount"`
	ForeignAmount NullableHoldInfoObjectForeignAmount `json:"foreignAmount"`
}

// NewTransactionResourceAttributesHoldInfo instantiates a new TransactionResourceAttributesHoldInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResourceAttributesHoldInfo(amount HoldInfoObjectAmount, foreignAmount NullableHoldInfoObjectForeignAmount) *TransactionResourceAttributesHoldInfo {
	this := TransactionResourceAttributesHoldInfo{}
	this.Amount = amount
	this.ForeignAmount = foreignAmount
	return &this
}

// NewTransactionResourceAttributesHoldInfoWithDefaults instantiates a new TransactionResourceAttributesHoldInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResourceAttributesHoldInfoWithDefaults() *TransactionResourceAttributesHoldInfo {
	this := TransactionResourceAttributesHoldInfo{}
	return &this
}

// GetAmount returns the Amount field value
func (o *TransactionResourceAttributesHoldInfo) GetAmount() HoldInfoObjectAmount {
	if o == nil {
		var ret HoldInfoObjectAmount
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionResourceAttributesHoldInfo) GetAmountOk() (*HoldInfoObjectAmount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionResourceAttributesHoldInfo) SetAmount(v HoldInfoObjectAmount) {
	o.Amount = v
}

// GetForeignAmount returns the ForeignAmount field value
// If the value is explicit nil, the zero value for HoldInfoObjectForeignAmount will be returned
func (o *TransactionResourceAttributesHoldInfo) GetForeignAmount() HoldInfoObjectForeignAmount {
	if o == nil || o.ForeignAmount.Get() == nil {
		var ret HoldInfoObjectForeignAmount
		return ret
	}

	return *o.ForeignAmount.Get()
}

// GetForeignAmountOk returns a tuple with the ForeignAmount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionResourceAttributesHoldInfo) GetForeignAmountOk() (*HoldInfoObjectForeignAmount, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignAmount.Get(), o.ForeignAmount.IsSet()
}

// SetForeignAmount sets field value
func (o *TransactionResourceAttributesHoldInfo) SetForeignAmount(v HoldInfoObjectForeignAmount) {
	o.ForeignAmount.Set(&v)
}

func (o TransactionResourceAttributesHoldInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["foreignAmount"] = o.ForeignAmount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionResourceAttributesHoldInfo struct {
	value *TransactionResourceAttributesHoldInfo
	isSet bool
}

func (v NullableTransactionResourceAttributesHoldInfo) Get() *TransactionResourceAttributesHoldInfo {
	return v.value
}

func (v *NullableTransactionResourceAttributesHoldInfo) Set(val *TransactionResourceAttributesHoldInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResourceAttributesHoldInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResourceAttributesHoldInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResourceAttributesHoldInfo(val *TransactionResourceAttributesHoldInfo) *NullableTransactionResourceAttributesHoldInfo {
	return &NullableTransactionResourceAttributesHoldInfo{value: val, isSet: true}
}

func (v NullableTransactionResourceAttributesHoldInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResourceAttributesHoldInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


